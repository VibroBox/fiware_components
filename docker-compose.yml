version: "3.1"

#volumes:
#    mongodb: ~

services:

    mongodb:
        image: mongo
        hostname: ${MONGODB_HOST}
        container_name: db-mongo
        env_file: .env
        ports:
            - "${MONGODB_PORT}:${MONGODB_PORT}"
        command: --bind_ip_all #  "--smallfiles" removed in latest mongo 4.2
        # WARNING: Docker volumes is not compatible with MongoDB on Windows and OS X 
        #volumes:
            #- mongodb:/data
            #- H:/Work/Git/vbx_fiware_comps/mdb_storage:/data
            #- H:/Work/Git/vbx_fiware_comps/mdb_storage:/data/db


    orion:
        image: fiware/orion
        hostname: ${CONTEXT_BROKER_HOST}
        container_name: fiware-orion
        depends_on:
            - mongodb
        env_file: .env
        ports:
            - "${CONTEXT_BROKER_PORT}:${CONTEXT_BROKER_PORT}"
        command: -dbhost mongodb


    iot-agent:
        image: fiware/iotagent-json
        hostname: ${IOT_AGENT_HOST}
        container_name: fiware-iot-agent
        depends_on:
            - mongodb
        env_file: .env
        ports:
            - "${IOT_AGENT_PORT0}:${IOT_AGENT_PORT0}"
            - "${IOT_AGENT_PORT1}:${IOT_AGENT_PORT1}"
        environment:
            - "IOTA_CB_HOST=orion"
            - "IOTA_CB_PORT=${CONTEXT_BROKER_PORT}"
            - "IOTA_NORTH_PORT=${IOT_AGENT_PORT0}"
            - "IOTA_REGISTRY_TYPE=mongodb"
            - "IOTA_MONGO_HOST=mongodb"
            - "IOTA_MONGO_PORT=${MONGODB_PORT}"
            - "IOTA_MONGO_DB=iotagent-json"
            - "IOTA_HTTP_PORT=${IOT_AGENT_PORT1}"
            - "IOTA_PROVIDER_URL=http://iot-agent:${IOT_AGENT_PORT0}"
            # added by RTG
            - "IOTA_LOG_LEVEL=DEBUG"


    draco:
        image: ging/fiware-draco
        container_name: draco
        hostname: ${DRACO_HOST}
        depends_on:
            - mongodb
        env_file: .env
        environment:
            - NIFI_WEB_HTTP_PORT=${DRACO_PORT0}
        ports:
            - "${DRACO_PORT0}:${DRACO_PORT0}"
            - "${DRACO_PORT1}:${DRACO_PORT1}"
            
    vcloud-fc:
        container_name: vcloud-fc
        hostname: ${VCLOUD_FC_HOST}
        depends_on:
            - orion
        build: 
            context: ./
            dockerfile: dockerfile_vcloud_fiware_connector
        volumes:
            - ./:/var/fiware/:rw
        env_file: .env
        ports:
            - "${VCLOUD_FC_PORT}:${VCLOUD_FC_PORT}"
        networks:
            - default
            #- nginx-proxy
            
    vbot:
        container_name: vbot
        hostname: ${VBOT_HOST}
        build: ${VBOT_PATH}
        volumes:
            - ${VBOT_PATH}:/var/vbot/:rw
        env_file: .env
        ports:
            - "${VBOT_PORT0}:${VBOT_PORT0}" # vbot http api 
            - "${VBOT_PORT1}:${VBOT_PORT1}" # tg-bot https api
        networks:
            - default
            #- nginx-proxy
